#################################################################################
#  Copyright (c) 2025 Cofinity-X
#  Copyright (c) 2025 SAP SE
#  Copyright (c) 2025 Fraunhofer Institute of Optronics, System Technologies
#  and Image Exploitation (Fraunhofer IOSB)
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
name: "Bump version"

on:
  workflow_dispatch:
  workflow_call:

jobs:
  Bump-Version:
    name: 'Update snapshot version'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
         ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.FX_BOT_GPG_PRIVKEY }}
          passphrase: ${{ secrets.FX_BOT_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Set new snapshot version
        shell: bash
        run: |
          # Extract release version
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

          IFS=.- read -r RELEASE_VERSION_MAJOR RELEASE_VERSION_MINOR RELEASE_VERSION_PATCH SNAPSHOT<<<"$VERSION"
          INC=0
          # Compute new snapshot version, do not increment snapshot on non-final releases, e.g. -rc1
          if [ -z "$SNAPSHOT" ] || [ "$SNAPSHOT" = "cloudevents" ]; then
            # snapshot
            echo "$VERSION is a final release version, increase patch for next snapshot"
            INC=1
          else
            echo "$VERSION is not a final release version (contains \"$SNAPSHOT\"), will not increase patch"
          fi

          VERSION="$RELEASE_VERSION_MAJOR.$RELEASE_VERSION_MINOR.$((RELEASE_VERSION_PATCH+$INC))-SNAPSHOT"
          SNAPSHOT_VERSION=$VERSION

          # Persist the "version" in the pom.xml
          mvn -B -ntp versions:set -DnewVersion='$SNAPSHOT_VERSION' -DgenerateBackupPoms=false

          # Commit and push to origin main
          git add .
          git commit -S --message "Introduce new snapshot version $SNAPSHOT_VERSION"

          git remote set-url origin git@github.com:${{ github.repository }}.git
          git push origin main
