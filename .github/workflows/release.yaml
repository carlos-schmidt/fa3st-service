#################################################################################
#  Copyright (c) 2024 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
#  Copyright (c) 2025 SAP SE
#  Copyright (c) 2025 Fraunhofer Institute of Optronics, System Technologies
#  and Image Exploitation (Fraunhofer IOSB)
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
name: "Release"

on:
  pull_request:
    branches:
      - main
    types:
      - closed

  workflow_call:


jobs:
  validation:
    name: "Check if head is release OR base is bugfix"
    runs-on: ubuntu-latest
    if: ${{ (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.ref_name, 'bugfix/')) }}
    outputs:
      RELEASE_VERSION: ${{ steps.release-version.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: Output release version
        id: release-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_OUTPUT

  github-release:
    name: Publish new github release
    needs: validation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.validation.outputs.RELEASE_VERSION
    steps:
      - uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
         ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.FX_BOT_GPG_PRIVKEY }}
          passphrase: ${{ secrets.FX_BOT_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
      - name: Create Release Tag
        id: create_release_tag
        shell: bash
        run: |
          git remote set-url origin git@github.com:${{ github.repository }}.git
          git tag -a ${{ needs.validation.outputs.RELEASE_VERSION }} -m "Release ${{ needs.validation.outputs.RELEASE_VERSION }}"
          git push origin ${{ needs.validation.outputs.RELEASE_VERSION }}
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: ${{ needs.validation.outputs.RELEASE_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          makeLatest: ${{ github.ref_name == 'main' }}
          removeArtifacts: true

  bump-snapshot-version:
    needs: github-release
    if: github.ref_name == 'main'
    uses: ./.github/workflows/bump-version.yaml
    secrets: inherit
